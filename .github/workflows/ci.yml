name: Unit tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Check lock file
        run: poetry lock --check

      - name: Run code quality checks
        run: poetry run make check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        pyspark-version: ["3.4.3", "3.5.1"]
        include:
          - python-version: "3.8"
            pyspark-version: "3.3.4"
          - python-version: "3.9"
            pyspark-version: "3.3.4"
          - python-version: "3.10"
            pyspark-version: "3.3.4"
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        with:
          python-version: ${{ matrix.python-version }}
          pyspark-version: ${{ matrix.pyspark-version }}

      - name: Run tests
        run: poetry run pytest tests

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        with:
          with-docs: true

      - name: Check if documentation can be built
        run: poetry run mkdocs build -s
